description = 'WorkTimeService'
group = 'hu.unideb.service'

buildscript {
    repositories {
        mavenCentral()
    }
    ext {
		springBootVersion = '1.3.3.RELEASE'
		jasyptVersion = '1.9.2'
    }
    dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
    }
}

apply plugin: 'spring-boot'

jar {
    baseName = 'worktime-service'
    version = '0.0.1-SNAPSHOT'
}

repositories {
	mavenCentral()
}

dependencies {
	//Add the project dependency
	compile project(':worktime-jdbc')
    //Add SpringBoot
    compile ("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    //compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
	
	//Google Guava Libraries
	
	
	//Jasypt 
	compile "org.jasypt:jasypt:${jasyptVersion}"
	compile "org.jasypt:jasypt-spring31:${jasyptVersion}"
		
    // mandatory dependencies for using Spock
    compile "org.codehaus.groovy:groovy-all:2.4.1"
	testCompile "org.spockframework:spock-core:1.0-groovy-2.4"

	// optional dependencies for using Spock
	testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
	testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
	testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)
}